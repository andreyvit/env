[
    { "keys": ["ctrl+d"], "command": "reveal_in_side_bar" },

    // expand selection
    { "keys": ["ctrl+l"], "command": "expand_selection", "args": {"to": "line"} },
    { "keys": ["ctrl+alt+s"], "command": "expand_selection", "args": {"to": "scope"} },
    { "keys": ["ctrl+s"], "command": "expand_selection", "args": {"to": "smart"} },
    
    { "keys": ["ctrl+w", "r"], "command": "close_to_right" },
    { "keys": ["ctrl+w", "ctrl+r"], "command": "close_to_right" },
    { "keys": ["ctrl+w", "o"], "command": "close_others" },
    { "keys": ["ctrl+w", "shift+o"], "command": "close_other_windows" },

    // restore C-e that's normally overridden by Emmet
    { "keys": ["ctrl+e"], "command": "move_to", "args": {"to": "eol"} },

    // C-t general prefix for many different transformations
    // Emmet plugin
    { "keys": ["ctrl+t", "w"], "command": "wrap_as_you_type" },
    { "keys": ["ctrl+t", "e"], "command": "expand_abbreviation" },
    // ChangeQuotes plugin
    { "keys": ["super+'"], "command": "change_quotes" },
    // StringUtilities
    { "keys": ["ctrl+t", "c"], "command": "convert_camel_underscores" },
    { "keys": ["ctrl+t", "d"], "command": "convert_camel_dash" },

    // C-p, C-n move up/down; S- extends selection
    { "keys": ["ctrl+p"], "command": "move", "args": {"by": "lines", "forward": false} },
    { "keys": ["ctrl+n"], "command": "move", "args": {"by": "lines", "forward": true} },
    // { "keys": ["ctrl+shift+p"], "command": "move", "args": {"by": "lines", "forward": false, "extend": true} },
    { "keys": ["ctrl+shift+n"], "command": "move", "args": {"by": "lines", "forward": true, "extend": true} },

    // M-p, M-n swap line up/down
    { "keys": ["ctrl+up"], "command": "swap_line_up" },
    { "keys": ["ctrl+down"], "command": "swap_line_down" },

    // M-b, M-f move left/right by word; C- moves by subwords, S- extends selection
    { "keys": ["alt+b"], "command": "move", "args": {"by": "words", "forward": false} },
    { "keys": ["alt+f"], "command": "move", "args": {"by": "word_ends", "forward": true} },
    { "keys": ["alt+shift+b"], "command": "move", "args": {"by": "words", "forward": false, "extend": true} },
    { "keys": ["alt+shift+f"], "command": "move", "args": {"by": "word_ends", "forward": true, "extend": true} },
    { "keys": ["ctrl+alt+b"], "command": "move", "args": {"by": "subwords", "forward": false} },
    { "keys": ["ctrl+alt+f"], "command": "move", "args": {"by": "subword_ends", "forward": true} },
    { "keys": ["ctrl+alt+shift+b"], "command": "move", "args": {"by": "subwords", "forward": false, "extend": true} },
    { "keys": ["ctrl+alt+shift+f"], "command": "move", "args": {"by": "subword_ends", "forward": true, "extend": true} },

    // quick sidebar toggle
    { "keys": ["ctrl+s"], "command": "toggle_side_bar" },

    // close all tabs without closing the project
    { "keys": ["super+alt+w"], "command": "close_all" },

    // Go To Definition, IDEA-style
    { "keys": ["super+alt+b"], "command": "goto_definition" },

    // F2 for bookmarks
    { "keys": ["f2"], "command": "next_bookmark" },
    { "keys": ["shift+f2"], "command": "prev_bookmark" },
    { "keys": ["super+f2"], "command": "toggle_bookmark" },
    { "keys": ["super+shift+f2"], "command": "clear_bookmarks" },
    { "keys": ["alt+f2"], "command": "select_all_bookmarks" },

    // LSP
    { "keys": ["primary+alt+m"], "command": "lsp_show_diagnostics_panel", "context": [{"key": "setting.lsp_active"}] },
    //{ "keys": ["ctrl+s"], "command": "noop", "context": [{"key": "lsp.signature_help", "operator": "equal", "operand": 0 }] },
    { "keys": ["ctrl+r"], "command": "lsp_symbol_rename" },
    { "keys": ["super+o"], "command": "lsp_document_symbols" },
    { "keys": ["super+shift+o"], "command": "lsp_workspace_symbols" },
    { "keys": ["super+k", "super+k"], "command": "lsp_code_actions" },
    { "keys": ["super+b"], "command": "lsp_symbol_definition", "args": {"side_by_side": false} },
    { "keys": ["super+shift+b"], "command": "lsp_symbol_type_definition", "args": {"side_by_side": false} },
    { "keys": ["f5"], "command": "lsp_symbol_references" },
    { "keys": ["f6"], "command": "lsp_signature_help_show" },

    // spell checker
    { "keys": ["f12"], "command": "toggle_setting", "args": {"setting": "spell_check"} },
    { "keys": ["ctrl+f12"], "command": "next_misspelling" },
    { "keys": ["ctrl+shift+f12"], "command": "prev_misspelling" },

    { "keys": ["alt+/"], "command": "auto_complete"},

    { "keys": ["ctrl+i"], "command": "reindent", "args": {"single_line": true} },

    // TAB and field editor behavior
    { "keys": ["tab"], "command": "insert_best_completion", "args": {"default": "\t", "exact": false} },
    { "keys": ["tab"], "command": "replace_completion_with_next_completion", "context": [{ "key": "last_command", "operator": "equal", "operand": "insert_best_completion" }] },
    { "keys": ["tab"], "command": "commit_completion", "context": [{ "key": "auto_complete_visible" }] },
    { "keys": ["alt+tab"], "command": "reindent" },
    { "keys": ["ctrl+/"], "command": "next_field" },
    { "keys": ["ctrl+shift+/"], "command": "prev_field" },

    // 'Sidebar Enhancements' plugin, C-x C-something  (or C-x C-M-something to copy data)
    { "keys": ["ctrl+x", "ctrl+r"], "command": "side_bar_rename" },
    { "keys": ["ctrl+x", "ctrl+n"], "command": "side_bar_new_file" },
    { "keys": ["ctrl+x", "ctrl+shift+n"], "command": "side_bar_new_directory" },
    { "keys": ["ctrl+x", "ctrl+d"], "command": "side_bar_duplicate" },
    { "keys": ["ctrl+x", "ctrl+f"], "command": "side_bar_reveal" },
    { "keys": ["ctrl+x", "ctrl+m"], "command": "side_bar_move" },
    { "keys": ["ctrl+x", "ctrl+e"], "command": "side_bar_delete" },
    { "keys": ["ctrl+x", "ctrl+alt+n"], "command": "side_bar_copy_name" },
    { "keys": ["ctrl+x", "ctrl+alt+p"], "command": "side_bar_copy_path_absolute_from_project" },
    { "keys": ["ctrl+x", "ctrl+alt+shift+p"], "command": "side_bar_copy_path" },

    // Emmet
    { "keys": ["ctrl+e"], "command": "emmet_expand_abbreviation" },
    { "keys": ["ctrl+alt+e"], "command": "emmet_enter_abbreviation" },

    { "keys": ["super+alt+n"], "command": "new_snippet_for_scope" },

    // Emacs-style help keys
    // { "keys": ["ctrl+h", "k"], "command": "describe_key" },
    // duplicate to be forgiving about mistakes
    // { "keys": ["ctrl+h", "ctrl+k"], "command": "describe_key" },
    { "keys": ["ctrl+h"], "command": "dash_doc"},
    { "keys": ["ctrl+alt+h"], "command": "dash_doc", "args": { "flip_syntax_sensitive": true } },

    // custom layouts
    {
        "keys": ["super+alt+2"],
        "command": "set_layout",
        "args":
        {
            "cols": [0.0, 0.6, 1.0],
            "rows": [0.0, 1.0],
            "cells": [[0, 0, 1, 1], [1, 0, 2, 1]]
        }
    },
    {
        "keys": ["super+alt+9"],
        "command": "set_layout",
        "args":
        {
            "cols": [0.0, 0.6, 1.0],
            "rows": [0.0, 0.6, 1.0],
            "cells": [[0, 0, 1, 2], [1, 0, 2, 1], [1, 1, 2, 2]]
        }
    },
    {
        "keys": ["super+alt+4"],
        "command": "set_layout",
        "args":
        {
            "cols": [0.0, 0.6, 1.0],
            "rows": [0.0, 0.4, 0.7, 1.0],
            "cells": [[0, 0, 1, 3], [1, 0, 2, 1], [1, 1, 2, 2], [1, 2, 2, 3]]
        }
    },
    {
        "keys": ["super+alt+6"],
        "command": "set_layout",
        "args":
        {
            "cols": [0.0, 0.3, 0.7, 1.0],
            "rows": [0.0, 0.7, 1.0],
            "cells": [[0, 0, 1, 1], [1, 0, 2, 2], [2, 0, 3, 1], [0, 1, 1, 2], [2, 1, 3, 2]]
        }
    },
    {
        "keys": ["super+alt+3"],
        "command": "set_layout",
        "args":
        {
            "cols": [0.0, 0.3, 0.7, 1.0],
            "rows": [0.0, 1.0],
            "cells": [[0, 0, 1, 1], [1, 0, 2, 1], [2, 0, 3, 1]]
        }
    },
    {
        "keys": ["super+alt+7"],
        "command": "set_layout",
        "args":
        {
            "cols": [0.0, 0.5, 0.75, 1.0],
            "rows": [0.0, 0.8, 1.0],
            "cells": [[0, 0, 1, 2], [1, 0, 3, 1], [1, 1, 2, 2], [2, 1, 3, 2]]
        }
    },
    {
        "keys": ["super+alt+8"],
        "command": "set_layout",
        "args":
        {
            "cols": [0.0, 0.4, 0.75, 1.0],
            "rows": [0.0, 0.7, 1.0],
            "cells": [[0, 0, 1, 2], [1, 0, 2, 2], [2, 0, 3, 1], [2, 1, 3, 2]]
        }
    },
    {
        "keys": ["super+alt+5"],
        "command": "set_layout",
        "args":
        {
            "cols": [0.0, 0.25, 0.55, 0.78, 1.0],
            "rows": [0.0, 0.8, 1.0],
            "cells": [[0, 0, 1, 2], [1, 0, 2, 2], [2, 0, 3, 1], [3, 0, 4, 1], [2, 1, 3, 2], [3, 1, 4, 2]]
        }
    },

    // Toggle Word Wrap
    { "keys": ["ctrl+z"], "command": "toggle_setting", "args": {"setting": "word_wrap"} },

    // Command-Control-P is unexplainably broken on my Mac
    { "keys": ["ctrl+["], "command": "prompt_select_workspace" },

    // quick access to Sublime Text preferences
    { "keys": ["super+shift+,"], "command": "open_file", "args": {"file": "${packages}/Default/Preferences.sublime-settings"} },
    { "keys": ["super+alt+,"], "command": "open_file", "args": {"file": "${packages}/User/Default (OSX).sublime-keymap"} },
    { "keys": ["super+alt+shift+,"], "command": "open_file", "args": {"file": "${packages}/Default/Default (OSX).sublime-keymap"} }
]
