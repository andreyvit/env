#!/bin/bash
set -euo pipefail

server=

###############################################################################
TOOLNAME="$(basename "$0")"
VERSION="0.3"
BANNER="$TOOLNAME $VERSION: rsync between identical directory structures"
USAGE="Usage: $TOOLNAME <server>"
# parse command-line options
cont_optparse=true
while test -n "${1-}" && $cont_optparse; do
    case $1 in
        --version) # Display the version number
            echo "$VERSION"; exit;;
        --help) # Display this help message
            echo "$BANNER"; echo
            echo "$USAGE"; echo
            echo "Available options:"
            perl -ne 'printf "  %-15s %s\n", $1, $2 if / {8}(-.*)\) # (.*)$/' $0
            exit;;
        -*)
            echo "** Invalid option $1. Run $TOOLNAME --help for a list of available options." >&2; exit 1;;
        *)
            server=$1; shift;;
    esac
done
###############################################################################

# https://djm.me/ask
ask_confirmation() {
    local reply
    while true; do
        echo -n "${action_name} for real? [y/N] "
        read reply </dev/tty

        if [ -z "$reply" ]; then
            reply=N
        fi

        case "$reply" in
            Y*|y*) return 0 ;;
            N*|n*) return 1 ;;
        esac
    done
}

ask_action() {
    # https://djm.me/ask
    local reply
    while true; do
        echo -n "Upload or Download? [u/d] "
        read reply </dev/tty
        case "$reply" in
            D*|d*) action=down; return 0;;
            U*|u*) action=up; return 0;;
        esac
        echo "Invalid input. Try again."
    done
}

run() {
    local dry=$1
    local dry_name="(**REAL RUN**)"
    $dry && dry_name="(dry run)"

    local progress="--progress"
    progress="--info=progress2"

    local -a args=(rsync -azh --delete "$progress")
    $dry && args+=(-nv)
    case $action in
        up)   args+=("." "$server:$rpath");;
        down) args+=("$server:$rpath/" ".");;
    esac

    echo; echo
    echo "â–¸ ${action_name} ${dry_name} $server"
    echo "${args[@]}"
    "${args[@]}"
}

test -n "$server" || exec $0 --help

ask_action
case $action in
    up)   action_name=UPLOAD;;
    down) action_name=DOWNLOAD;;
    *)    echo "** Canceled."; exit 1;;
esac

lpath="$(pwd)"
rpath="${lpath/$HOME/~}"

run true

echo; echo
if ask_confirmation; then
    run false
fi
