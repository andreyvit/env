#!/bin/bash

action=
action_name=
server=
dry=true
dry_name="(dry run)"
flags=()

###############################################################################
TOOLNAME="$(basename "$0")"
VERSION="0.1"
BANNER="$TOOLNAME $VERSION: rsync between identical directory structures"
USAGE="Usage: $TOOLNAME [options] (-d | -u) [-f] <server>"
# parse command-line options
while test -n "$1" && $cont_optparse true; do
    case $1 in
        -d | --down) # rsync FROM the remote server
            action_name=DOWNLOAD; flags+=(--down); action=down; shift;;
        -u | --up) # rsync TO the remote server
            action_name=UPLOAD; flags+=(--up); action=up; shift;;
        -f | --force) # actually perform the transfer
            dry_name="(**REAL RUN**)"
            dry=false; shift;;
        --version) # Display the version number
            echo "$VERSION"; exit;;
        --help) # Display this help message
            echo "$BANNER"; echo
            echo "$USAGE"; echo
            echo "Available options:"
            perl -ne 'printf "  %-15s %s\n", $1, $2 if / {8}(-.*)\) # (.*)$/' $0
            exit;;
        -*)
            echo "** Invalid option $1. Run $TOOLNAME --help for a list of available options." >&2; exit 1;;
        *)
            server=$1; shift;;
    esac
done
###############################################################################

ask() {
    # https://djm.me/ask
    local prompt default reply
    while true; do
        if [ "${2:-}" = "Y" ]; then
            prompt="Y/n"; default=Y
        elif [ "${2:-}" = "N" ]; then
            prompt="y/N"; default=N
        else
            prompt="y/n"; default=
        fi

        # Ask the question (not using "read -p" as it uses stderr not stdout)
        echo -n "$1 [$prompt] "

        # Read the answer (use /dev/tty in case stdin is redirected from somewhere else)
        read reply </dev/tty

        if [ -z "$reply" ]; then
            reply=$default
        fi

        case "$reply" in
            Y*|y*) return 0 ;;
            N*|n*) return 1 ;;
        esac
    done
}

test -n "$server" || exec $0 --help
test -n "$action" || exec $0 --help
flags+=($server)

lpath="$(pwd)"
rpath="${lpath/$HOME/~}"
progress="--progress"
progress="--info=progress2"
args=(rsync -azh --delete "$progress")
$dry && args+=(-n)
if test "$action" = "down"; then
    args+=("$server:$rpath/" ".")
else
    args+=("." "$server:$rpath")
fi

echo "â–¸ ${action_name} ${dry_name} $server"

echo "${args[@]}"
"${args[@]}"

if $dry; then
    if ask "${action_name} for real?" N; then
        exec -- "$0" --force "${flags[@]}"
    fi
fi
